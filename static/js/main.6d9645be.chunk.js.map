{"version":3,"sources":["UseReducer.js","UseState.js","Effect.js","index.js"],"names":["Reducer","useReducer","state","action","type","count","showText","dispatch","style","height","onClick","App","useState","counter","setCounter","className","background","width","max","Effect","data","setData","setCount","useEffect","axios","get","then","response","email","rootElement","document","getElementById","createRoot","render"],"mappings":"8IAGe,SAASA,IACtB,IAWA,EAA0BC,sBAXV,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,YACH,MAAO,CAAEC,MAAOH,EAAMG,MAAQ,EAAGC,SAAUJ,EAAMI,UACnD,IAAK,iBACH,MAAO,CAAED,MAAOH,EAAMG,MAAOC,UAAWJ,EAAMI,UAEhD,QACE,MAAO,CAAC,EAEd,GAC8C,CAAED,MAAO,EAAGC,UAAU,IAAO,mBAApEJ,EAAK,KAAEK,EAAQ,KACtB,OACE,qBAAKC,MAAO,CAAEC,OAAQ,WAAY,SAChC,qCACE,6BACE,4BAAG,iBAEL,6BAAKP,EAAMG,QACX,wBACEK,QAAS,WACPH,EAAS,CAAEH,KAAM,cACjBG,EAAS,CAAEH,KAAM,kBACnB,EAAE,SACH,cAGAF,EAAMI,UAAY,6BAAI,mBACvB,2BAIR,CClCe,SAASK,IACtB,MAA8BC,mBAAS,GAAE,mBAAlCC,EAAO,KAAEC,EAAU,KAC1B,OACE,sBAAKC,UAAU,MAAK,UAClB,6BAAI,iBACJ,uBACA,qCACE,6BAAI,cAEJ,wBACEL,QAAS,WACHG,GAAW,GAAKA,EAAU,KAC5BC,EAAWD,EAAU,GAEzB,EAAE,SACH,cAGD,qBACEL,MAAO,CACLQ,WAAY,MACZC,MAAM,GAAD,OAAKJ,EAAO,KACjBJ,OAAQ,OACRS,IAAK,UAGT,wBACER,QAAS,WACHG,EAAU,GACZC,EAAWD,EAAU,GAEzB,EAAE,SACH,cAGD,4BAIR,C,YCVeM,MA7Bf,WACE,MAAwBP,mBAAS,IAAG,mBAA7BQ,EAAI,KAAEC,EAAO,KACpB,EAA0BT,mBAAS,GAAE,mBAA9BP,EAAK,KAAEiB,EAAQ,KAQtB,OAPAC,qBAAU,WACRC,IACGC,IAAI,iDACJC,MAAK,SAACC,GACLN,EAAQM,EAASP,KAAKf,GACxB,GACJ,GAAG,CAACA,IAEF,gCACE,6BACE,4BAAG,iBAEL,6BAAKA,IACL,4BAAIe,EAAKQ,QACT,wBACElB,QAAS,WACPY,EAASjB,EAAQ,EACnB,EAAE,SACH,UAGD,yBAGN,ECtBMwB,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,eAAC,aAAU,WACT,cAAC,EAAQ,IACT,cAAC,EAAU,IACX,cAAC,EAAM,O","file":"static/js/main.6d9645be.chunk.js","sourcesContent":["import \"./styles.css\";\r\nimport { useReducer } from \"react\";\r\n\r\nexport default function Reducer() {\r\n  const reducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"INCREMENT\":\r\n        return { count: state.count + 1, showText: state.showText };\r\n      case \"toggleShowText\":\r\n        return { count: state.count, showText: !state.showText };\r\n\r\n      default:\r\n        return {};\r\n    }\r\n  };\r\n  const [state, dispatch] = useReducer(reducer, { count: 0, showText: true });\r\n  return (\r\n    <div style={{ height: \"10.2rem\" }}>\r\n      <>\r\n        <h3>\r\n          <u>useReducer</u>\r\n        </h3>\r\n        <h1>{state.count}</h1>\r\n        <button\r\n          onClick={() => {\r\n            dispatch({ type: \"INCREMENT\" });\r\n            dispatch({ type: \"toggleShowText\" });\r\n          }}\r\n        >\r\n          Increment\r\n        </button>\r\n        {state.showText && <h3>A sample text </h3>}\r\n        <hr />\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport { useState } from \"react\";\nexport default function App() {\n  const [counter, setCounter] = useState(0);\n  return (\n    <div className=\"App\">\n      <h1>React Hooks </h1>\n      <hr />\n      <>\n        <h3>UseState </h3>\n\n        <button\n          onClick={() => {\n            if (counter >= 0 && counter < 100) {\n              setCounter(counter + 10);\n            }\n          }}\n        >\n          Increment\n        </button>\n        <div\n          style={{\n            background: \"red\",\n            width: `${counter}%`,\n            height: \"50px\",\n            max: \"100%\"\n          }}\n        ></div>\n        <button\n          onClick={() => {\n            if (counter > 0) {\n              setCounter(counter - 10);\n            }\n          }}\n        >\n          decrement\n        </button>\n        <hr />\n      </>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nfunction Effect() {\r\n  const [data, setData] = useState(\"\");\r\n  const [count, setCount] = useState(0);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"https://jsonplaceholder.typicode.com/comments\")\r\n      .then((response) => {\r\n        setData(response.data[count]);\r\n      });\r\n  }, [count]);\r\n  return (\r\n    <div>\r\n      <h3>\r\n        <u>Use Effect</u>\r\n      </h3>\r\n      <h4>{count}</h4>\r\n      <p>{data.email}</p>\r\n      <button\r\n        onClick={() => {\r\n          setCount(count + 1);\r\n        }}\r\n      >\r\n        Click\r\n      </button>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Effect;\r\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport UseReducer from \"./UseReducer\";\nimport UseState from \"./UseState\";\nimport Effect from \"./Effect\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <UseState />\n    <UseReducer />\n    <Effect />\n  </StrictMode>\n);\n"],"sourceRoot":""}